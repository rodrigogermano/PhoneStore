// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneStore.Infra.DataAccess.Contexts;

namespace PhoneStore.Infra.DataAccess.Migrations
{
    [DbContext(typeof(PhoneStoreContext))]
    [Migration("20200608185847_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhoneStory.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Type").HasValue("Product");
                });

            modelBuilder.Entity("PhoneStory.Domain.Entities.Accessory", b =>
                {
                    b.HasBaseType("PhoneStory.Domain.Entities.Product");

                    b.Property<string>("Compatibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Accessory");
                });

            modelBuilder.Entity("PhoneStory.Domain.Entities.CellPhone", b =>
                {
                    b.HasBaseType("PhoneStory.Domain.Entities.Product");

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CellPhone");
                });

            modelBuilder.Entity("PhoneStory.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("PhoneStory.Domain.Shared.ValueObject.Dimension", "Dimensions", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Depth")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Depth")
                                .HasColumnType("decimal(15, 2)")
                                .HasDefaultValue(0m);

                            b1.Property<decimal>("Length")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Length")
                                .HasColumnType("decimal(15, 2)")
                                .HasDefaultValue(0m);

                            b1.Property<decimal>("Width")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Width")
                                .HasColumnType("decimal(15, 2)")
                                .HasDefaultValue(0m);

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
